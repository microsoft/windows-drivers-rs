on:
  push:
  pull_request:
  merge_group:
  schedule: # Trigger a job on default branch at 4AM PST everyday
    - cron: "0 11 * * *"

name: Docs

env:
  RUSTDOCFLAGS: -D warnings

jobs:
  docs:
    name: Docs
    runs-on: windows-2025
    strategy:
      matrix:
        wdk:
          - version: 10.0.22621 # NI WDK
            source: winget
          - version: 10.0.26100 # GE WDK
            source: nuget

        llvm:
          - 17.0.6

        rust_toolchain:
          - stable
          - beta
          - nightly

        cargo_profile:
          - dev
          - release

        target_triple:
          - name: x86_64-pc-windows-msvc
            arch: amd64
          - name: aarch64-pc-windows-msvc
            arch: arm64

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Winget PowerShell Module
        shell: pwsh
        run: Install-Module -Name Microsoft.WinGet.Client -Repository PSGallery -Force

      - name: Install LLVM ${{ matrix.llvm }}
        run: |
          if ((Get-WinGetPackage -Id LLVM -Source winget -MatchOption Equals).InstalledVersion -eq '${{ matrix.llvm }}') {
            Write-Host "LLVM ${{ matrix.llvm }} is already installed."
          } else {
            Write-Host "Installing LLVM ${{ matrix.llvm }}..."
            Install-WinGetPackage -Id LLVM.LLVM -Version ${{ matrix.llvm }} -Source winget -MatchOption Equals -Mode Silent -Force
          }
          clang --version

      - name: Install WDK (${{ matrix.wdk.version }})
        uses: ./.github/actions/install-wdk
        with:
          version: ${{ matrix.wdk.version }}
          source: ${{ matrix.wdk.source }}
          host: 'x64' # windows-2025 is x64-based
          target: ${{ matrix.target_triple.arch }}

      - name: Install Rust Toolchain (${{ matrix.rust_toolchain }})
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust_toolchain }}
          targets: ${{ matrix.target_triple.name }}

      - name: Run Cargo Doc
        # proc-macro crates must be excluded to avoid cargo doc bug: https://github.com/rust-lang/cargo/issues/10368
        run: cargo +${{ matrix.rust_toolchain }} doc --locked --profile ${{ matrix.cargo_profile }} --target ${{ matrix.target_triple.name }} --workspace --exclude wdk-macros --all-features

      - name: Run Cargo Doc w/ proc-macro crates
        if: matrix.target_triple.name == 'x86_64-pc-windows-msvc'
        # cargo doc can only generate documentation for proc-macro crates when --target is not specified due to a cargo doc bug: https://github.com/rust-lang/cargo/issues/7677
        run: cargo +${{ matrix.rust_toolchain }} doc --locked --profile ${{ matrix.cargo_profile }} --all-features
