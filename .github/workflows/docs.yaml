name: Docs

on:
  push:
    branches-ignore:
      - 'gh-readonly-queue/**'
  pull_request:
  merge_group:
  schedule: # Trigger a job on default branch at 4AM PST everyday
    - cron: 0 11 * * *

concurrency:
  group: ${{ github.workflow }}-${{ github.event.compare || github.head_ref || github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  RUSTDOCFLAGS: -D warnings

jobs:
  docs:
    name: Docs
    strategy:
      fail-fast: false # Allow all matrix variants to complete even if some fail
      matrix:
        runner:
          - name: windows-2025
            arch: amd64
          - name: windows-11-arm
            arch: arm64

        wdk:
          - version: 10.0.22621 # NI WDK
            source: winget
          - version: 10.0.26100 # GE WDK
            source: nuget

        llvm:
          - 17.0.6

        rust_toolchain:
          - stable
          - beta
          - nightly

        cargo_profile:
          - dev
          - release

        target_triple:
          - name: x86_64-pc-windows-msvc
            arch: amd64
          - name: aarch64-pc-windows-msvc
            arch: arm64

    runs-on: ${{ matrix.runner.name }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Install Winget
        if: matrix.runner.name == 'windows-11-arm'
        uses: ./.github/actions/install-winget
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Winget PowerShell Module
        shell: pwsh
        run: Install-Module -Name Microsoft.WinGet.Client -Repository PSGallery -Force

      - name: Install LLVM ${{ matrix.llvm }}
        uses: ./.github/actions/install-llvm
        with:
          version: ${{ matrix.llvm }}

      - name: Install WDK (${{ matrix.wdk.version }})
        id: install_wdk
        uses: ./.github/actions/install-wdk
        with:
          version: ${{ matrix.wdk.version }}
          source: ${{ matrix.wdk.source }}
          architectures: ${{ matrix.wdk.source == 'nuget' && 'x64 ARM64' || '' }}

      - name: Configure WDK environment (NuGet)
        if: matrix.wdk.source == 'nuget'
        uses: ./.github/actions/configure-wdk-env
        with:
          package-root: ${{ steps.install_wdk.outputs.nuget-package-root }}
          full-version-number: ${{ steps.install_wdk.outputs.full-version-number }}
          runner-arch: ${{ matrix.runner.arch }}
          target-arch: ${{ matrix.target_triple.arch }}

      - name: Install Rust Toolchain (${{ matrix.rust_toolchain }})
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust_toolchain }}
          targets: ${{ matrix.target_triple.name }}

      - name: Run Cargo Doc
        # proc-macro crates must be excluded to avoid cargo doc bug: https://github.com/rust-lang/cargo/issues/10368
        run: cargo +${{ matrix.rust_toolchain }} doc --locked --profile ${{ matrix.cargo_profile }} --target ${{ matrix.target_triple.name }} --workspace --exclude wdk-macros --all-features

      - name: Run Cargo Doc w/ proc-macro crates
        # cargo doc can only generate documentation for proc-macro crates when --target is not specified due to a cargo doc bug: https://github.com/rust-lang/cargo/issues/7677
        run: cargo +${{ matrix.rust_toolchain }} doc --locked --profile ${{ matrix.cargo_profile }} --all-features
