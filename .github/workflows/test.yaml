on:
  push:
    branches-ignore:
      - 'gh-readonly-queue/**'
  pull_request:
  merge_group:
  schedule: # Trigger a job on default branch at 4AM PST everyday
    - cron: 0 11 * * *

name: Test

concurrency:
  group: ${{ github.workflow }}-${{ github.event.compare || github.head_ref || github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  test:
    name: Test
    strategy:
      fail-fast: false # Allow all matrix variants to complete even if some fail
      matrix:
        runner:
          - name: windows-2025
            arch: amd64
          - name: windows-11-arm
            arch: arm64

        wdk:
          - version: 10.0.22621 # NI WDK
            source: winget
          - version: 10.0.26100 # GE WDK
            source: nuget

        llvm:
          - 17.0.6

        rust_toolchain:
          - stable
          - beta
          - nightly

        cargo_profile:
          - dev
          - release

    runs-on: ${{ matrix.runner.name }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Winget
        if: matrix.runner.name == 'windows-11-arm'
        uses: ./.github/actions/install-winget
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Winget PowerShell Module
        shell: pwsh
        run: Install-Module -Name Microsoft.WinGet.Client -Repository PSGallery -Force

      - name: Install LLVM ${{ matrix.llvm }}
        uses: ./.github/actions/install-llvm
        with:
          version: ${{ matrix.llvm }}

      - name: Install WDK (${{ matrix.wdk.version }})
        uses: ./.github/actions/install-wdk
        with:
          version: ${{ matrix.wdk.version }}
          source: ${{ matrix.wdk.source }}
          host: ${{ matrix.wdk.source == 'nuget' && matrix.runner.arch || '' }}
          target: ${{ matrix.wdk.source == 'nuget' && matrix.runner.arch || '' }}

      - name: Install Rust Toolchain (${{ matrix.rust_toolchain }})
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust_toolchain }}
          targets: |
            x86_64-pc-windows-msvc
            aarch64-pc-windows-msvc

      - name: Install Cargo Expand
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-expand@1.0.85

      - name: Install Cargo Make
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-make

      - name: Run Cargo Test (workspace)
        run: cargo +${{ matrix.rust_toolchain }} test --locked --profile ${{ matrix.cargo_profile }} --all-features

      - name: Run Cargo Test (Top-Level tests Folder via Cargo Make)
        run: cargo +${{ matrix.rust_toolchain }} make --cwd ./tests test --locked --profile ${{ matrix.cargo_profile }}
