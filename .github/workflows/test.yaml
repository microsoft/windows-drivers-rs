on:
  push:
  pull_request:
  merge_group:
  schedule: # Trigger a job on default branch at 4AM PST everyday
    - cron: "0 11 * * *"

name: Test

jobs:
  test:
    name: Test
    runs-on: windows-latest
    strategy:
      matrix:
        wdk:
          - version: 10.0.22621 # NI WDK
            source: winget
          - version: 10.0.26100 # GE WDK
            source: nuget

        llvm:
          - 17.0.6

        rust_toolchain:
          - stable
          - beta
          - nightly

        cargo_profile:
          - dev
          - release

        target_triple:
          - name: x86_64-pc-windows-msvc
            arch: amd64
          # - aarch64-pc-windows-msvc FIXME: Add support for executing ARM64 tests. Maybe use target specific test runner in emulator: https://doc.rust-lang.org/cargo/reference/config.html#target

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Winget
        uses: ./.github/actions/winget-install
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install LLVM ${{ matrix.llvm }}
        run: |
          if ((Get-WinGetPackage -Id LLVM -Source winget -MatchOption Equals).InstalledVersion -eq '${{ matrix.llvm }}') {
            Write-Host "LLVM ${{ matrix.llvm }} is already installed."
          } else {
            Write-Host "Installing LLVM ${{ matrix.llvm }}..."
            Install-WinGetPackage -Id LLVM.LLVM -Version ${{ matrix.llvm }} -Source winget -MatchOption Equals -Mode Silent -Force
          }
          clang --version

      - name: Install WDK (${{ matrix.wdk.version }})
        uses: ./.github/actions/install-wdk
        with:
          version: ${{ matrix.wdk.version }}
          source: ${{ matrix.wdk.source }}
          host: 'x64' # windows-latest is x64-based
          target: ${{ matrix.target_triple.arch }}

      - name: Install Rust Toolchain (${{ matrix.rust_toolchain }})
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust_toolchain }}
          targets: ${{ matrix.target_triple.name }}

      - name: Install Cargo Expand
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-expand@1.0.85

      - name: Run Cargo Test
        run: cargo +${{ matrix.rust_toolchain }} test --locked --profile ${{ matrix.cargo_profile }} --target ${{ matrix.target_triple.name }} --all-features
