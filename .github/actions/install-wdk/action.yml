name: Install WDK

inputs:
  version:
    description: WDK version to install.
    required: true
  source:
    description: Source to install WDK from (nuget or winget).
    required: true
  arch:
    description: Target architecture (amd64 or arm64).
    required: true

runs:
  using: "composite"
  steps:
    - name: Install WDK
      shell: pwsh
      run: |
        $version = '${{ inputs.version }}'
        $source = '${{ inputs.source }}'
        $arch = '${{ inputs.arch }}'

        if ($version -notmatch '^10\.0\.\d{5}(\.\d{1,4})?$') {
          Write-Error "Invalid version format: $version. Expected format: 10.0.[5 digit number].[0-4 digit number]"
          exit 1
        }

        if ($source -ne 'nuget' -and $source -ne 'winget') {
          Write-Error "Invalid source: $source. Supported sources are 'nuget' and 'winget'."
          exit 1
        }

        if ($arch -eq 'amd64') {
          $arch = 'x64'
        } elseif ($arch -eq 'arm64') {
          $arch = 'ARM64'
        } else {
          Write-Error "Unsupported architecture: $arch"
          exit 1
        }

        if ($source -eq 'nuget') {
          $wdkDir = "C:\WDK.$version.$arch"
          if (Test-Path $wdkDir) {
            Write-Host "Output directory $wdkDir already exists. Removing it..."
            Remove-Item -Recurse -Force $wdkDir
          }
          Write-Host "Trying to install WDK version $version using nuget CLI..."
          nuget install Microsoft.Windows.WDK.$arch -Version $version -Source https://api.nuget.org/v3/index.json -NonInteractive -OutputDirectory $wdkDir
          $sdk_version = ($version.Split('.')[0..2]) -join '.'
          Write-Host "WDK installed to $wdkDir"
          if (-not (Test-Path $wdkDir)) {
            Write-Error "Failed to install dependencies to $wdkDir. Please check the WDK version and source."
            exit 1
          }
          Write-Host "Setting WDKContentRoot environment variable..."
          $env:WDKContentRoot = $wdkDir\Microsoft.Windows.WDK.$arch.$version\c
          Write-Output "WDKContentRoot=$env:WDKContentRoot" >> $env:GITHUB_ENV
        } else {
          Write-Host "Using Winget to install WDK version $version..."
          $wdk = "Microsoft.WindowsWDK.$version"
          if ((Get-WinGetPackage -Id $wdk -Source winget -MatchOption Equals).Id -eq '$wdk') {
            Write-Host "$wdk is already installed. Attempting to update..."
            Update-WinGetPackage -Id $wdk -Source winget -MatchOption Equals -Mode Silent -Force
          } else {
            Write-Host "Installing $wdk..."
            Install-WinGetPackage -Id $wdk -Source winget -MatchOption Equals -Mode Silent -Force
          }
        }
