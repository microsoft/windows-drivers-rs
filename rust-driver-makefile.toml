# This file can be leveraged to build downstream drivers. See examples at https://github.com/microsoft/Windows-rust-drivers-samples

# FIXME: replace all script blocks with cargo-make commands: "Favor commands over scripts, as commands support more features such as automatic dependencies installation, argument functions, and more..."
# FIXME: this flow is based on the signing process of a KMDF PNP driver. There should be different flows availabe for different types of drivers as outlined in https://learn.microsoft.com/en-us/windows-hardware/drivers/install/test-signing-driver-packages 

[env]
VC_BUILD_DIR = "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\VC\\Auxiliary\\Build\\vcvarsamd64_x86.bat"
# FIXME: add --locked for CI builds using CARGO_MAKE_PR and CARGO_MAKE_CI
CARGO_MAKE_CARGO_BUILD_TEST_FLAGS = "--profile ${CARGO_MAKE_CARGO_PROFILE}"

# Cargo puts "dev" profile builds in the "debug" target folder: https://doc.rust-lang.org/cargo/guide/build-cache.html#build-cache. This supports cargo-make profile values of both "development" and "dev"
OUTPUT_DIR = { source = "${CARGO_MAKE_CARGO_PROFILE}", default_value = "${CARGO_MAKE_CRATE_TARGET_DIRECTORY}\\${CARGO_MAKE_CARGO_PROFILE}", mapping = { "dev" = "${CARGO_MAKE_CRATE_TARGET_DIRECTORY}\\debug" } }

[tasks.rename-dll-to-sys]
dependencies = ["build"]
script = '''
echo "%OUTPUT_DIR%"
cd "%OUTPUT_DIR%"
mkdir package
if exist package\%CARGO_MAKE_CRATE_FS_NAME%.sys (
  del package\%CARGO_MAKE_CRATE_FS_NAME%.sys
)
rename %CARGO_MAKE_CRATE_FS_NAME%.dll %CARGO_MAKE_CRATE_FS_NAME%.sys
copy %CARGO_MAKE_CRATE_FS_NAME%.sys package\%CARGO_MAKE_CRATE_FS_NAME%.sys
'''

[tasks.stampinf]
dependencies = ["build"]
script = '''
copy "%CARGO_MAKE_WORKING_DIRECTORY%\%CARGO_MAKE_CRATE_FS_NAME%.inx" "%OUTPUT_DIR%\package\%CARGO_MAKE_CRATE_FS_NAME%.inf"
stampinf.exe -f "%OUTPUT_DIR%\package\%CARGO_MAKE_CRATE_FS_NAME%.inf" -d * -a amd64 -c %CARGO_MAKE_CRATE_FS_NAME%.cat -v * -k 1.33 -n
'''

[tasks.copypdb]
dependencies = ["build"]
script = '''
cd "%OUTPUT_DIR%"
copy %CARGO_MAKE_CRATE_FS_NAME%.pdb package\%CARGO_MAKE_CRATE_FS_NAME%.pdb
'''

[tasks.inf2cat]
dependencies = ["stampinf"]
script = '''
inf2cat.exe /driver:"%OUTPUT_DIR%\package" /os:10_NI_X64,10_VB_X64 /uselocaltime /verbose
'''

[tasks.infverif]
dependencies = ["stampinf"]
script = '''
"%WDKToolRoot%\%Platform%\infverif.exe" /v /w "%OUTPUT_DIR%\package\%CARGO_MAKE_CRATE_FS_NAME%.inf" /msft
'''

[tasks.sign]
dependencies = ["rename-dll-to-sys", "inf2cat", "infverif"]
script = '''
call "%VC_BUILD_DIR%"
if not exist DriverCertificate.cer (
  makecert -r -pe -ss PrivateCertStore -n CN=DriverCertificate DriverCertificate.cer
) else (
  echo Certificate already exists.
)
signtool sign /a /v /s PrivateCertStore /n DriverCertificate /fd certHash /t http://timestamp.digicert.com "%OUTPUT_DIR%\package\%CARGO_MAKE_CRATE_FS_NAME%.cat"
'''

[tasks.default]
alias = "sign"
